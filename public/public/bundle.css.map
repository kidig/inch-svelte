{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Converter.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Converter from \"./Converter.svelte\";\n</script>\n\n<main>\n  <div class=\"converter\">\n    <h1>inch to cm</h1>\n    <Converter />\n  </div>\n  <div class=\"footer\">2023 &copy; kidig</div>\n</main>\n\n<style>\n  :root {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    height: 100%;\n    width: 100%;\n  }\n\n  :global(body) {\n    height: 100%;\n    width: 100%;\n    margin: 0 auto;\n  }\n\n  main {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n  }\n\n  h1 {\n    text-align: center;\n    padding-top: 20px;\n  }\n\n  .converter {\n    flex: 1;\n  }\n\n  .footer {\n    flex: 1;\n    display: flex;\n    align-items: flex-end;\n    padding: 10px 0;\n    font-size: 0.8em;\n  }\n</style>\n",
    "<script>\n  let inches = \"1\";\n  let centimeters = \"2.54\";\n\n  const convertToCm = () => {\n    const inchValue = parseFloat(inches);\n    if (!isNaN(inchValue)) {\n      const cmValue = inchValue * 2.54;\n      centimeters = cmValue.toFixed(2);\n    } else {\n      centimeters = \"\";\n    }\n  };\n\n  const convertToInches = () => {\n    const cmValue = parseFloat(centimeters);\n    if (!isNaN(cmValue)) {\n      const inchValue = cmValue / 2.54;\n      inches = inchValue.toFixed(2);\n    } else {\n      inches = \"\";\n    }\n  };\n</script>\n\n<div class=\"container\">\n  <div>\n    <input type=\"number\" bind:value={inches} on:input={convertToCm} />\n    <span class=\"text\">inch</span>\n  </div>\n  <div>\n    <input type=\"number\" bind:value={centimeters} on:input={convertToInches} />\n    <span class=\"text\">cm</span>\n  </div>\n</div>\n\n<style>\n  .container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    font-size: 28px;\n  }\n  input {\n    font-size: 1em;\n    text-align: right;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    background: none;\n    padding: 2px 46px 2px 6px;\n    margin: 0;\n    width: 230px;\n    height: 40px;\n  }\n  .text {\n    display: inline-block;\n    font-size: 0.6em;\n    text-align: right;\n    margin-left: -42px;\n    padding: 0;\n  }\n\n  @media (min-width: 480px) {\n    input {\n      width: 160px;\n    }\n  }\n\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "AAaE,KAAM,CACJ,WAAW,CAAE,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;AAC/E,MAAM,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAC9D,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IACT,CAEQ,IAAM,CACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,IACZ,CAEA,kBAAK,CACH,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,GAAG,CAAE,IACP,CAEA,gBAAG,CACD,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,IACf,CAEA,wBAAW,CACT,IAAI,CAAE,CACR,CAEA,qBAAQ,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,QAAQ,CACrB,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,SAAS,CAAE,KACb;ACdA,wBAAW,CACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,IACb,CACA,mBAAM,CACJ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CACzB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IACV,CACA,mBAAM,CACJ,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,KAAK,CAClB,OAAO,CAAE,CACX,CAEA,MAAO,YAAY,KAAK,CAAE,CACxB,mBAAM,CACJ,KAAK,CAAE,KACT,CACF,CAGA,mBAAK,2BAA2B,CAChC,mBAAK,2BAA4B,CAC/B,kBAAkB,CAAE,IAAI,CACxB,MAAM,CAAE,CACV,CAGA,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAE,CACnB,eAAe,CAAE,SACnB"
}